#!/bin/sh

### BEGIN INIT INFO
# Provides:           docker-memcached
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Docker-ized memcached
# Description:        Docker-ized memcached
### END INIT INFO

DOCKER=/usr/bin/docker
MEMCACHED_IMAGE="chrissnell/memcached"
CONTAINER_PID=/var/run/docker-memcached.pid
LISTEN_IFACE="eth1"
# seconds to wait before stopping container
SHUTDOWN_WAIT="2"
PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

# Check lxc-docker is present
[ -x $DOCKER ] || (log_failure_msg "docker not present"; exit 1)

# Get lsb functions
. /lib/lsb/init-functions

if [ -f /etc/default/lxc ]; then
	. /etc/default/lxc
fi

check_root_id ()
{
	if [ "$(id -u)" != "0" ]; then
		log_failure_msg "Docker must be run as root"; exit 1
	fi
}

case "$1" in
	start)
		check_root_id || exit 1
                $DOCKER ps > /dev/null 2>&1
                if [ $? -ne 0 ]; then
                    log_failure_msg "Docker is not running"; exit 1
                else
   		    log_begin_msg "Starting memcached container..."
                    IP=`ifconfig $LISTEN_IFACE | awk -F':' '/inet addr/&&!/127.0.0.1/{split($2,_," ");print _[1]}'`
                    # Map port 11211 from the LISTEN_FACE to port 11211 on container
                    CONTAINER_ID=`$DOCKER run -d -p ${IP}:11211:11211 $MEMCACHED_IMAGE`
                    `echo $CONTAINER_ID > $CONTAINER_PID`
		    log_end_msg $?
                fi
		;;

	stop)
		check_root_id || exit 1
                if [ -e $CONTAINER_PID ]; then
		    log_begin_msg "Stopping memcached container"
                    CONTAINER_ID=`cat "$CONTAINER_PID" 2>/dev/null`
                    $DOCKER stop -t\=2 $CONTAINER_ID
                    if [ $? -eq 0 ]; then
		        log_end_msg $?
                        rm $CONTAINER_PID
                    fi
                else
                    log_failure_msg "$MEMCACHED_IMAGE container is not running"; exit 1
                fi
		;;

	restart)
		check_root_id || exit 1
                CONTAINER_ID=`cat "$CONTAINER_PID" 2>/dev/null`
		[ -n "$CONTAINER_ID" ] \
			&& $DOCKER ps |grep $MEMCACHED_IMAGE $> /dev/null 2>&1 \
			&& $0 stop
		$0 start
		;;

	force-reload)
		check_root_id || exit 1
		$0 restart
		;;

	status)
                $DOCKER ps|grep $MEMCACHED_IMAGE
		;;

	*)
		echo "Usage: $0 {start|stop|restart|status}"
		exit 1
		;;
esac

exit 0
